---
import Item from "./item.astro";

import "devicon/devicon.min.css";

export type Technology = {
  name: string;
  icon?: string;
};

export type Project = {
  title: string;
  type: "opensource" | "client";
  description: string;
  url: string;
  technologies: string[];
  tags?: string[];
  repository?: string;
};

export const TECHNOLOGY_MAP: Record<string, Technology> = {
  npm: {
    name: "npm",
    icon: "devicon-npm-original-wordmark",
  },
  rspack: {
    name: "rspack",
  },
  react: {
    name: "react",
    icon: "devicon-react-original",
  },
  tailwind: {
    name: "tailwind",
    icon: "devicon-tailwindcss-original",
  },
  shacdn: {
    name: "shacdn",
  },
  "react-query": {
    name: "react-query",
  },
  "react-router-dom": {
    name: "react-router-dom",
  },
  "react-i18-next": {
    name: "react-i18-next",
  },
  pnpm: {
    name: "pnpm",
    icon: "devicon-pnpm-plain",
  },
  bash: {
    name: "bash",
    icon: "devicon-bash-plain",
  },
  zsh: {
    name: "zsh",
    icon: "devicon-ohmyzsh-plain",
  },
  vim: {
    name: "vim",
    icon: "devicon-vim-plain",
  },
  javascript: {
    name: "javascript",
    icon: "devicon-javascript-plain",
  },
  css: {
    name: "css",
    icon: "devicon-css3-plain",
  },
  html: {
    name: "html",
    icon: "devicon-html5-plain",
  },
  astro: {
    name: "astro",
    icon: "devicon-astro-plain",
  },
  tally: {
    name: "tally",
  },
  vite: {
    name: "vite",
    icon: "devicon-vitejs-plain",
  },
};

const projects: Project[] = [
  {
    title: "micropods",
    type: "opensource",
    description:
      "Complete example of module federation with rspack, react, tailwind, shacdn",
    url: "https://github.com/stefan-moraru/micropods",
    technologies: [
      "rspack",
      "react",
      "tailwind",
      "shacdn",
      "react-query",
      "react-router-dom",
      "react-i18-next",
      "pnpm",
    ],
  },
  {
    title: "react-portal-bridge",
    type: "opensource",
    tags: ["npm"],
    description:
      "Share React components between microfrontends by using dynamic portals",
    url: "https://npmjs.com/package/react-portal-bridge",
    repository: "https://github.com/stefan-moraru/react-portal-bridge",
    technologies: ["react", "vite", "pnpm"],
  },
  {
    title: "dotfiles",
    type: "opensource",
    description: "Sensible and easily replicable setup for a macbook",
    url: "https://github.com/stefan-moraru/dotfiles",
    technologies: ["bash", "zsh", "vim"],
  },
  {
    title: "pseudocod",
    type: "opensource",
    description: "Pseudocode IDE for highschools",
    url: "https://pseudocod.ro",
    technologies: ["javascript", "css", "html"],
  },
  {
    title: "museve",
    type: "client",
    description: "Corporate website for a music school",
    url: "https://museve.ro",
    technologies: ["astro", "tailwind", "tally"],
  },
];

const articles = [
  {
    title: "Microfrontends - Complete module federation example",
    description:
      "A complete example of module federation with rspack and an UI library, translations, pub/sub and many more.",
    url: "https://dev.to/stefanmoraru/complete-module-federation-example-with-rspack-3pn3",
  },
  {
    title: "single-spa: 404 route without an additional microfrontend",
    description:
      "Exploring a way to simplify your single-spa microfrontend architecture by removing the dedicated error page microfrontend",
    url: "https://dev.to/stefanmoraru/single-spa-404-route-without-an-additional-microfrontend-531j",
  },
];

const social = [
  { url: "https://github.com/stefan-moraru" },
  { url: "https://dev.to/stefanmoraru" },
  { title: "stefan@stefanmoraru.ro", url: "mailto:stefan@stefanmoraru.ro" },
  { url: "https://www.npmjs.com/~stefanmoraru" },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Stefan Moraru</title>
  </head>

  <body class="container px-4 pb-8 sm:px-0 mx-auto bg-slate-800 mt-4">
    <h1 class="text-white text-lg">Stefan Moraru</h1>

    <div class="grid grid-cols-1 gap-4 mt-2">
      <h2 class="text-white text-md font-medium">üë∑ Projects</h2>
      {projects.map((project) => <Item {...project} />)}

      <h2 class="text-white text-md font-medium">üìù Articles</h2>
      {articles.map((article) => <Item {...article} />)}

      <h2 class="text-white text-md font-medium">üåç Social</h2>
      <div class="bg-gray-200 p-4 rounded-xl">
        {
          social.map((platform, index) => (
            <a
              class={`block text-blue-600 ${index === social.length - 1 ? "" : "mb-2"}`}
              href={platform.url}
            >
              {platform.title || platform.url}
            </a>
          ))
        }
      </div>
    </div>
  </body>
</html>

<!--

Portfolio goals
- Retro version

Project goals
- Dynamic 3d website (threejs)
- Project with next.js
- Mobile application using React Native
- Chrome extension
- VSCode extension
- VIM plugin

---

Created

create:
portfolio website
mobile app using react native
chrome extension
vscode extension
online game

technologies:
markdoc
contentful
wordpress headless cms
partytown
deno
netlify

goals?

to do:
dynamic svg
3d model

next.js
alpine
lit
preact
performance
SEO
nuxt
mitosis
web components
electron
react-native
typescript
vite
vercel
zagjs
chakra
astro
tailwind
remix
gatsby
graphql
solid
preact
rollup
parcel
pnpm
vitest
jest
three.js
vue
svelte
emotion
css modules
css grids
accesibility
postcss
styled components
singlespa
esbuild
webpack
eslint
prettier
angular
-->
